version: "3.8"

services:
  blue-backend:
    image: ${CI_REGISTRY_IMAGE}/sausage-backend:$CI_COMMIT_SHA 
    container_name: blue-backend
    environment:
      VIRTUAL_HOST: "backend"
      VIRTUAL_PORT: "8080"
      SPRING_DATASOURCE_USERNAME: ${PSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${PSQL_PASS}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${PSQL_HOST}:${PSQL_PORT}/${PSQL_DBNAME}
    restart: always
    networks:
      - sausage-store
    healthcheck:
      test: wget --quiet -O - http://localhost:8080/actuator/health
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 6
#    deploy:
#      replicas: 1

  green-backend:
    image: ${CI_REGISTRY_IMAGE}/sausage-backend:$CI_COMMIT_SHA 
    container_name: green-backend
    environment:
      VIRTUAL_HOST: "backend"
      VIRTUAL_PORT: "8080"
      SPRING_DATASOURCE_USERNAME: ${PSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${PSQL_PASS}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${PSQL_HOST}:${PSQL_PORT}/${PSQL_DBNAME}
    restart: always
    networks:
      - sausage-store
    healthcheck:
      test: wget --quiet -O - http://localhost:8080/actuator/health
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 6
#    deploy:
#      replicas: 1

  backend-report:
    image: ${CI_REGISTRY_IMAGE}/sausage-backend-report:$CI_COMMIT_SHA 
    container_name: sausage-backend-report
    restart: always
    environment:
      PORT: 8081
      DB: mongodb://${MONGO_USER}:${MONGO_PASS}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DBNAME}?tls=true
    networks:
      - sausage-store

  frontend:
    image: ${CI_REGISTRY_IMAGE}/sausage-frontend:$CI_COMMIT_SHA 
    container_name: sausage-frontend
    restart: always
    environment:
      DEFAULT_HOST: "backend"
    ports:
      - "80:80"
    networks:
      - sausage-store
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro  

networks:
  sausage-store: