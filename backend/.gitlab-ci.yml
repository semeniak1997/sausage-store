cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90

stages:
  - build
  - test
  - release
  - deploy

build-backend-code-job:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true  
  
include:
  - template: Security/SAST.gitlab-ci.yml  

spotbugs-sast:
  stage: test
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  cache:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository
  artifacts:
    reports:
       sast: gl-sast-report.json

sonarqube-backend-sast:
  stage: test
  script: 
    - >
      cd backend

      export SPRING_FLYWAY_ENABLED=false

      mvn verify sonar:sonar 
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACK}
      -Dsonar.projectName=${SONAR_POJECT_NAME_BACK}
      -Dsonar.qualitygate.wait=true
  needs:
    - build-backend-code-job
  image: maven:3.8-openjdk-16
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache

upload-backend-release:
  stage: release
  needs:
    - build-backend-code-job
    - sonarqube-backend-sast
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA

deploy-backend:
  stage: deploy
  needs:
      - upload-backend-release
  image: alpine:3.18
  before_script:
      - apk add openssh-client bash gettext
      - eval $(ssh-agent -s)
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo "${SSH_KNOWN_HOSTS}" >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
  script: 
      - envsubst < ./backend/deploy.sh|ssh ${DEV_USER}@${DEV_HOST}
  environment:
      name: review/$CI_COMMIT_REF_NAME
      url: http://${DEV_HOST}:80
  rules: 
    - when: manual

    
